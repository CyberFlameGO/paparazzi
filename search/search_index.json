{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Paparazzi \u00b6 An Android library to render your application screens without a physical device or emulator. Jetifier \u00b6 If using Jetifier to migrate off Support libraries, add the following to your gradle.properties to exclude bundled Android dependencies. android . jetifier . blacklist = android - base - common , common Releases \u00b6 Our change log has release history. Using plugin application: buildscript { repositories { mavenCentral () google () } dependencies { classpath 'app.cash.paparazzi:paparazzi-gradle-plugin:0.7.1' } } apply plugin: 'app.cash.paparazzi' Using the plugins DSL: plugins { id 'app.cash.paparazzi' version '0.7.1' } Snapshots of the development version are available in Sonatype\u2019s snapshots repository . repositories { mavenCentral () maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' } } Tasks \u00b6 $ ./gradlew some-project:testDebug Runs tests and generates an HTML report at some-project/build/reports/paparazzi/debug/ showing all test runs and snapshots. $ ./gradlew some-project:recordPaparazziDebug Saves snapshots as golden values to a predefined source-controlled location (default: src/test/snapshots ). $ ./gradlew some-project:verifyPaparazziDebug Runs tests and verifies against previously-recorded golden values. Check out the sample . License \u00b6 Copyright 2019 Square, Inc. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Overview"},{"location":"#paparazzi","text":"An Android library to render your application screens without a physical device or emulator.","title":"Paparazzi"},{"location":"#jetifier","text":"If using Jetifier to migrate off Support libraries, add the following to your gradle.properties to exclude bundled Android dependencies. android . jetifier . blacklist = android - base - common , common","title":"Jetifier"},{"location":"#releases","text":"Our change log has release history. Using plugin application: buildscript { repositories { mavenCentral () google () } dependencies { classpath 'app.cash.paparazzi:paparazzi-gradle-plugin:0.7.1' } } apply plugin: 'app.cash.paparazzi' Using the plugins DSL: plugins { id 'app.cash.paparazzi' version '0.7.1' } Snapshots of the development version are available in Sonatype\u2019s snapshots repository . repositories { mavenCentral () maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' } }","title":"Releases"},{"location":"#tasks","text":"$ ./gradlew some-project:testDebug Runs tests and generates an HTML report at some-project/build/reports/paparazzi/debug/ showing all test runs and snapshots. $ ./gradlew some-project:recordPaparazziDebug Saves snapshots as golden values to a predefined source-controlled location (default: src/test/snapshots ). $ ./gradlew some-project:verifyPaparazziDebug Runs tests and verifies against previously-recorded golden values. Check out the sample .","title":"Tasks"},{"location":"#license","text":"Copyright 2019 Square, Inc. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"changelog/","text":"Change Log \u00b6 Version 0.7.1 \u00b6 2021-05-17 New \u00b6 [Gradle Plugin] Support the \u2013tests option for record/verify tasks Fixed \u00b6 [Gradle Plugin] Defer task configuration until created Version 0.7.0 \u00b6 2021-02-26 New \u00b6 Kotlin 1.4.30 Add support for inline complex XML resources Enable Burst support Expose maximum percentage difference in image verification as a setting Render extension api to add extra information to snapshots Allow selection of night mode in DeviceConfig [Gradle Plugin] Gradle 6.8.3 [Gradle Plugin] Creating an umbrella task to execute on all variants Fixed \u00b6 Properly execute Choreographer.doFrame after view has been laid out Fix broken text appearances when style resource names contain periods Fix ability to access asset files Use target-sdk to simulate device when available Always write screenshots to disk in record mode Don\u2019t crash when running on Java 12+ [Gradle Plugin] Force test re-runs when a resource or asset has changed [Gradle Plugin] Force test re-runs if generated report or snapshot dirs are deleted Version 0.6.0 \u00b6 2020-10-02 As of this release, consumers must build on Java 11 environments. New \u00b6 Point to a more recent version of layoutlib that runs on Android Q and builds with Java 11. Refactor Paparazzi to better support non-Gradle builds Added device configs for Pixel 4 series Version 0.5.2 \u00b6 2020-09-17 Fixed \u00b6 [Gradle Plugin] Fixed record and verify tasks in multi-module projects. Version 0.5.1 \u00b6 2020-09-17 Fixed \u00b6 [Gradle Plugin] Fixed race condition in record and verify tasks. Version 0.5.0 \u00b6 2020-09-16 Initial release.","title":"Change Log"},{"location":"changelog/#change-log","text":"","title":"Change Log"},{"location":"changelog/#version-071","text":"2021-05-17","title":"Version 0.7.1"},{"location":"changelog/#new","text":"[Gradle Plugin] Support the \u2013tests option for record/verify tasks","title":"New"},{"location":"changelog/#fixed","text":"[Gradle Plugin] Defer task configuration until created","title":"Fixed"},{"location":"changelog/#version-070","text":"2021-02-26","title":"Version 0.7.0"},{"location":"changelog/#new_1","text":"Kotlin 1.4.30 Add support for inline complex XML resources Enable Burst support Expose maximum percentage difference in image verification as a setting Render extension api to add extra information to snapshots Allow selection of night mode in DeviceConfig [Gradle Plugin] Gradle 6.8.3 [Gradle Plugin] Creating an umbrella task to execute on all variants","title":"New"},{"location":"changelog/#fixed_1","text":"Properly execute Choreographer.doFrame after view has been laid out Fix broken text appearances when style resource names contain periods Fix ability to access asset files Use target-sdk to simulate device when available Always write screenshots to disk in record mode Don\u2019t crash when running on Java 12+ [Gradle Plugin] Force test re-runs when a resource or asset has changed [Gradle Plugin] Force test re-runs if generated report or snapshot dirs are deleted","title":"Fixed"},{"location":"changelog/#version-060","text":"2020-10-02 As of this release, consumers must build on Java 11 environments.","title":"Version 0.6.0"},{"location":"changelog/#new_2","text":"Point to a more recent version of layoutlib that runs on Android Q and builds with Java 11. Refactor Paparazzi to better support non-Gradle builds Added device configs for Pixel 4 series","title":"New"},{"location":"changelog/#version-052","text":"2020-09-17","title":"Version 0.5.2"},{"location":"changelog/#fixed_2","text":"[Gradle Plugin] Fixed record and verify tasks in multi-module projects.","title":"Fixed"},{"location":"changelog/#version-051","text":"2020-09-17","title":"Version 0.5.1"},{"location":"changelog/#fixed_3","text":"[Gradle Plugin] Fixed race condition in record and verify tasks.","title":"Fixed"},{"location":"changelog/#version-050","text":"2020-09-16 Initial release.","title":"Version 0.5.0"},{"location":"code_of_conduct/","text":"Open Source Code of Conduct \u00b6 At Square, we are committed to contributing to the open source community and simplifying the process of releasing and managing open source software. We\u2019ve seen incredible support and enthusiasm from thousands of people who have already contributed to our projects\u200a\u2014\u200aand we want to ensure our community continues to be truly open for everyone. This code of conduct outlines our expectations for participants, as well as steps to reporting unacceptable behavior. We are committed to providing a welcoming and inspiring community for all and expect our code of conduct to be honored. Square\u2019s open source community strives to: Be open : We invite anyone to participate in any aspect of our projects. Our community is open, and any responsibility can be carried by a contributor who demonstrates the required capacity and competence. Be considerate : People use our work, and we depend on the work of others. Consider users and colleagues before taking action. For example, changes to code, infrastructure, policy, and documentation may negatively impact others. Be respectful : We expect people to work together to resolve conflict, assume good intentions, and act with empathy. Do not turn disagreements into personal attacks. Be collaborative : Collaboration reduces redundancy and improves the quality of our work. We strive for transparency within our open source community, and we work closely with upstream developers and others in the free software community to coordinate our efforts. Be pragmatic : Questions are encouraged and should be asked early in the process to avoid problems later. Be thoughtful and considerate when seeking out the appropriate forum for your questions. Those who are asked should be responsive and helpful. Step down considerately : Members of every project come and go. When somebody leaves or disengages from the project, they should make it known and take the proper steps to ensure that others can pick up where they left off. This code is not exhaustive or complete. It serves to distill our common understanding of a collaborative, shared environment, and goals. We expect it to be followed in spirit as much as in the letter. Diversity Statement \u00b6 We encourage everyone to participate and are committed to building a community for all. Although we may not be able to satisfy everyone, we all agree that everyone is equal. Whenever a participant has made a mistake, we expect them to take responsibility for it. If someone has been harmed or offended, it is our responsibility to listen carefully and respectfully, and do our best to right the wrong. Although this list cannot be exhaustive, we explicitly honor diversity in age, culture, ethnicity, gender identity or expression, language, national origin, political beliefs, profession, race, religion, sexual orientation, socioeconomic status, and technical ability. We will not tolerate discrimination based on any of the protected characteristics above, including participants with disabilities. Reporting Issues \u00b6 If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . For more details, please see our Reporting Guidelines below. Thanks \u00b6 Some of the ideas and wording for the statements and guidelines above were based on work by the Twitter , Ubuntu , GDC , and Django communities. We are thankful for their work. Reporting Guide \u00b6 If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . All reports will be handled with discretion. In your report please include: Your contact information. Names (real, nicknames, or pseudonyms) of any individuals involved. If there are additional witnesses, please include them as well. Your account of what occurred, and if you believe the incident is ongoing. If there is a publicly available record (e.g. a mailing list archive or a public IRC logger), please include a link. Any additional information that may be helpful. After filing a report, a representative from the Square Code of Conduct committee will contact you personally. The committee will then review the incident, follow up with any additional questions, and make a decision as to how to respond. Anyone asked to stop unacceptable behavior is expected to comply immediately. If an individual engages in unacceptable behavior, the Square Code of Conduct committee may take any action they deem appropriate, up to and including a permanent ban from all of Square spaces without warning.","title":"Code of Conduct"},{"location":"code_of_conduct/#open-source-code-of-conduct","text":"At Square, we are committed to contributing to the open source community and simplifying the process of releasing and managing open source software. We\u2019ve seen incredible support and enthusiasm from thousands of people who have already contributed to our projects\u200a\u2014\u200aand we want to ensure our community continues to be truly open for everyone. This code of conduct outlines our expectations for participants, as well as steps to reporting unacceptable behavior. We are committed to providing a welcoming and inspiring community for all and expect our code of conduct to be honored. Square\u2019s open source community strives to: Be open : We invite anyone to participate in any aspect of our projects. Our community is open, and any responsibility can be carried by a contributor who demonstrates the required capacity and competence. Be considerate : People use our work, and we depend on the work of others. Consider users and colleagues before taking action. For example, changes to code, infrastructure, policy, and documentation may negatively impact others. Be respectful : We expect people to work together to resolve conflict, assume good intentions, and act with empathy. Do not turn disagreements into personal attacks. Be collaborative : Collaboration reduces redundancy and improves the quality of our work. We strive for transparency within our open source community, and we work closely with upstream developers and others in the free software community to coordinate our efforts. Be pragmatic : Questions are encouraged and should be asked early in the process to avoid problems later. Be thoughtful and considerate when seeking out the appropriate forum for your questions. Those who are asked should be responsive and helpful. Step down considerately : Members of every project come and go. When somebody leaves or disengages from the project, they should make it known and take the proper steps to ensure that others can pick up where they left off. This code is not exhaustive or complete. It serves to distill our common understanding of a collaborative, shared environment, and goals. We expect it to be followed in spirit as much as in the letter.","title":"Open Source Code of Conduct"},{"location":"code_of_conduct/#diversity-statement","text":"We encourage everyone to participate and are committed to building a community for all. Although we may not be able to satisfy everyone, we all agree that everyone is equal. Whenever a participant has made a mistake, we expect them to take responsibility for it. If someone has been harmed or offended, it is our responsibility to listen carefully and respectfully, and do our best to right the wrong. Although this list cannot be exhaustive, we explicitly honor diversity in age, culture, ethnicity, gender identity or expression, language, national origin, political beliefs, profession, race, religion, sexual orientation, socioeconomic status, and technical ability. We will not tolerate discrimination based on any of the protected characteristics above, including participants with disabilities.","title":"Diversity Statement"},{"location":"code_of_conduct/#reporting-issues","text":"If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . For more details, please see our Reporting Guidelines below.","title":"Reporting Issues"},{"location":"code_of_conduct/#thanks","text":"Some of the ideas and wording for the statements and guidelines above were based on work by the Twitter , Ubuntu , GDC , and Django communities. We are thankful for their work.","title":"Thanks"},{"location":"code_of_conduct/#reporting-guide","text":"If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . All reports will be handled with discretion. In your report please include: Your contact information. Names (real, nicknames, or pseudonyms) of any individuals involved. If there are additional witnesses, please include them as well. Your account of what occurred, and if you believe the incident is ongoing. If there is a publicly available record (e.g. a mailing list archive or a public IRC logger), please include a link. Any additional information that may be helpful. After filing a report, a representative from the Square Code of Conduct committee will contact you personally. The committee will then review the incident, follow up with any additional questions, and make a decision as to how to respond. Anyone asked to stop unacceptable behavior is expected to comply immediately. If an individual engages in unacceptable behavior, the Square Code of Conduct committee may take any action they deem appropriate, up to and including a permanent ban from all of Square spaces without warning.","title":"Reporting Guide"},{"location":"releasing/","text":"Releasing \u00b6 Update CHANGELOG.md . Set versions: export RELEASE_VERSION=X.Y.Z export NEXT_VERSION=X.Y.Z-SNAPSHOT Update, build, and upload: sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g\" \\ gradle.properties sed -i \"\" \\ \"s/\\\"app.cash.paparazzi:\\([^\\:]*\\):[^\\\"]*\\\"/\\\"app.cash.paparazzi:\\1:$RELEASE_VERSION\\\"/g\" \\ `find . -name \"README.md\"` ./gradlew clean uploadArchives Visit Sonatype Nexus to promote the artifact. Or drop it if there is a problem! Tag the release, prepare for the next one, and push to GitHub. git commit -am \"Prepare for release $RELEASE_VERSION.\" git tag -a parent-$RELEASE_VERSION -m \"Version $RELEASE_VERSION\" sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g\" \\ gradle.properties git commit -am \"Prepare next development version.\" git push && git push --tags Prerequisites \u00b6 In ~/.gradle/gradle.properties , set the following: SONATYPE_NEXUS_USERNAME - Sonatype username for releasing to app.cash . SONATYPE_NEXUS_PASSWORD - Sonatype password for releasing to app.cash .","title":"Releasing"},{"location":"releasing/#releasing","text":"Update CHANGELOG.md . Set versions: export RELEASE_VERSION=X.Y.Z export NEXT_VERSION=X.Y.Z-SNAPSHOT Update, build, and upload: sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g\" \\ gradle.properties sed -i \"\" \\ \"s/\\\"app.cash.paparazzi:\\([^\\:]*\\):[^\\\"]*\\\"/\\\"app.cash.paparazzi:\\1:$RELEASE_VERSION\\\"/g\" \\ `find . -name \"README.md\"` ./gradlew clean uploadArchives Visit Sonatype Nexus to promote the artifact. Or drop it if there is a problem! Tag the release, prepare for the next one, and push to GitHub. git commit -am \"Prepare for release $RELEASE_VERSION.\" git tag -a parent-$RELEASE_VERSION -m \"Version $RELEASE_VERSION\" sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g\" \\ gradle.properties git commit -am \"Prepare next development version.\" git push && git push --tags","title":"Releasing"},{"location":"releasing/#prerequisites","text":"In ~/.gradle/gradle.properties , set the following: SONATYPE_NEXUS_USERNAME - Sonatype username for releasing to app.cash . SONATYPE_NEXUS_PASSWORD - Sonatype password for releasing to app.cash .","title":"Prerequisites"},{"location":"0.x/paparazzi/","text":"paparazzi Packages \u00b6 Name Summary app.cash.paparazzi Index \u00b6 All Types","title":"Index"},{"location":"0.x/paparazzi/#packages","text":"Name Summary app.cash.paparazzi","title":"Packages"},{"location":"0.x/paparazzi/#index","text":"All Types","title":"Index"},{"location":"0.x/paparazzi/alltypes/","text":"All Types \u00b6 Name Summary app.cash.paparazzi.DeviceConfig Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. app.cash.paparazzi.Environment app.cash.paparazzi.Flags app.cash.paparazzi.Paparazzi app.cash.paparazzi.RenderExtension An extension for overlaying additional information on top of each rendered frame. app.cash.paparazzi.Snapshot app.cash.paparazzi.SnapshotHandler app.cash.paparazzi.SnapshotJsonAdapter app.cash.paparazzi.SnapshotVerifier app.cash.paparazzi.TestName","title":"Index"},{"location":"0.x/paparazzi/alltypes/#all-types","text":"Name Summary app.cash.paparazzi.DeviceConfig Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. app.cash.paparazzi.Environment app.cash.paparazzi.Flags app.cash.paparazzi.Paparazzi app.cash.paparazzi.RenderExtension An extension for overlaying additional information on top of each rendered frame. app.cash.paparazzi.Snapshot app.cash.paparazzi.SnapshotHandler app.cash.paparazzi.SnapshotJsonAdapter app.cash.paparazzi.SnapshotVerifier app.cash.paparazzi.TestName","title":"All Types"},{"location":"0.x/paparazzi/app.cash.paparazzi/","text":"paparazzi / app.cash.paparazzi Package app.cash.paparazzi \u00b6 Types \u00b6 Name Summary DeviceConfig data class DeviceConfig Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Environment data class Environment Flags object Flags Paparazzi class Paparazzi : TestRule RenderExtension interface RenderExtension An extension for overlaying additional information on top of each rendered frame. Snapshot data class Snapshot SnapshotHandler interface SnapshotHandler : Closeable SnapshotJsonAdapter class SnapshotJsonAdapter : JsonAdapter< Snapshot > SnapshotVerifier class SnapshotVerifier : SnapshotHandler TestName data class TestName Functions \u00b6 Name Summary androidHome fun androidHome(): String detectEnvironment fun detectEnvironment(): Environment","title":"0.x API"},{"location":"0.x/paparazzi/app.cash.paparazzi/#package-appcashpaparazzi","text":"","title":"Package app.cash.paparazzi"},{"location":"0.x/paparazzi/app.cash.paparazzi/#types","text":"Name Summary DeviceConfig data class DeviceConfig Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Environment data class Environment Flags object Flags Paparazzi class Paparazzi : TestRule RenderExtension interface RenderExtension An extension for overlaying additional information on top of each rendered frame. Snapshot data class Snapshot SnapshotHandler interface SnapshotHandler : Closeable SnapshotJsonAdapter class SnapshotJsonAdapter : JsonAdapter< Snapshot > SnapshotVerifier class SnapshotVerifier : SnapshotHandler TestName data class TestName","title":"Types"},{"location":"0.x/paparazzi/app.cash.paparazzi/#functions","text":"Name Summary androidHome fun androidHome(): String detectEnvironment fun detectEnvironment(): Environment","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/android-home/","text":"paparazzi / app.cash.paparazzi / androidHome androidHome \u00b6 fun androidHome(): String","title":"Android home"},{"location":"0.x/paparazzi/app.cash.paparazzi/android-home/#androidhome","text":"fun androidHome(): String","title":"androidHome"},{"location":"0.x/paparazzi/app.cash.paparazzi/detect-environment/","text":"paparazzi / app.cash.paparazzi / detectEnvironment detectEnvironment \u00b6 fun detectEnvironment(): Environment","title":"Detect environment"},{"location":"0.x/paparazzi/app.cash.paparazzi/detect-environment/#detectenvironment","text":"fun detectEnvironment(): Environment","title":"detectEnvironment"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/","text":"paparazzi / app.cash.paparazzi / DeviceConfig DeviceConfig \u00b6 data class DeviceConfig Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Defaults are for a Nexus 4 device. Constructors \u00b6 Name Summary <init> DeviceConfig(screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, nightMode: NightMode = NOTNIGHT, density: Density = Density.XHIGH, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, released: String = \"November 13, 2012\") Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Properties \u00b6 Name Summary density val density: Density folderConfiguration val folderConfiguration: FolderConfiguration hardwareConfig val hardwareConfig: HardwareConfig keyboard val keyboard: Keyboard keyboardState val keyboardState: KeyboardState navigation val navigation: Navigation nightMode val nightMode: NightMode orientation val orientation: ScreenOrientation ratio val ratio: ScreenRatio released val released: String screenHeight val screenHeight: Int screenWidth val screenWidth: Int size val size: ScreenSize softButtons val softButtons: Boolean touchScreen val touchScreen: TouchScreen xdpi val xdpi: Int ydpi val ydpi: Int Companion Object Properties \u00b6 Name Summary NEXUS_10 val NEXUS_10: DeviceConfig NEXUS_4 val NEXUS_4: DeviceConfig NEXUS_5 val NEXUS_5: DeviceConfig NEXUS_5_LAND val NEXUS_5_LAND: DeviceConfig NEXUS_7 val NEXUS_7: DeviceConfig NEXUS_7_2012 val NEXUS_7_2012: DeviceConfig PIXEL val PIXEL: DeviceConfig PIXEL_2 val PIXEL_2: DeviceConfig PIXEL_2_XL val PIXEL_2_XL: DeviceConfig PIXEL_3 val PIXEL_3: DeviceConfig PIXEL_3_XL val PIXEL_3_XL: DeviceConfig PIXEL_3A val PIXEL_3A: DeviceConfig PIXEL_3A_XL val PIXEL_3A_XL: DeviceConfig PIXEL_4 val PIXEL_4: DeviceConfig PIXEL_4_XL val PIXEL_4_XL: DeviceConfig PIXEL_4A val PIXEL_4A: DeviceConfig PIXEL_C val PIXEL_C: DeviceConfig PIXEL_XL val PIXEL_XL: DeviceConfig Companion Object Functions \u00b6 Name Summary getEnumMap fun getEnumMap(path: File ): Map < String , Map < String , Int >> loadProperties fun loadProperties(path: File ): Map < String , String >","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/#deviceconfig","text":"data class DeviceConfig Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Defaults are for a Nexus 4 device.","title":"DeviceConfig"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/#constructors","text":"Name Summary <init> DeviceConfig(screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, nightMode: NightMode = NOTNIGHT, density: Density = Density.XHIGH, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, released: String = \"November 13, 2012\") Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps.","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/#properties","text":"Name Summary density val density: Density folderConfiguration val folderConfiguration: FolderConfiguration hardwareConfig val hardwareConfig: HardwareConfig keyboard val keyboard: Keyboard keyboardState val keyboardState: KeyboardState navigation val navigation: Navigation nightMode val nightMode: NightMode orientation val orientation: ScreenOrientation ratio val ratio: ScreenRatio released val released: String screenHeight val screenHeight: Int screenWidth val screenWidth: Int size val size: ScreenSize softButtons val softButtons: Boolean touchScreen val touchScreen: TouchScreen xdpi val xdpi: Int ydpi val ydpi: Int","title":"Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/#companion-object-properties","text":"Name Summary NEXUS_10 val NEXUS_10: DeviceConfig NEXUS_4 val NEXUS_4: DeviceConfig NEXUS_5 val NEXUS_5: DeviceConfig NEXUS_5_LAND val NEXUS_5_LAND: DeviceConfig NEXUS_7 val NEXUS_7: DeviceConfig NEXUS_7_2012 val NEXUS_7_2012: DeviceConfig PIXEL val PIXEL: DeviceConfig PIXEL_2 val PIXEL_2: DeviceConfig PIXEL_2_XL val PIXEL_2_XL: DeviceConfig PIXEL_3 val PIXEL_3: DeviceConfig PIXEL_3_XL val PIXEL_3_XL: DeviceConfig PIXEL_3A val PIXEL_3A: DeviceConfig PIXEL_3A_XL val PIXEL_3A_XL: DeviceConfig PIXEL_4 val PIXEL_4: DeviceConfig PIXEL_4_XL val PIXEL_4_XL: DeviceConfig PIXEL_4A val PIXEL_4A: DeviceConfig PIXEL_C val PIXEL_C: DeviceConfig PIXEL_XL val PIXEL_XL: DeviceConfig","title":"Companion Object Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/#companion-object-functions","text":"Name Summary getEnumMap fun getEnumMap(path: File ): Map < String , Map < String , Int >> loadProperties fun loadProperties(path: File ): Map < String , String >","title":"Companion Object Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-init-/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / <init> <init> \u00b6 DeviceConfig(screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, nightMode: NightMode = NOTNIGHT, density: Density = Density.XHIGH, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, released: String = \"November 13, 2012\") Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Defaults are for a Nexus 4 device.","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-init-/#init","text":"DeviceConfig(screenHeight: Int = 1280, screenWidth: Int = 768, xdpi: Int = 320, ydpi: Int = 320, orientation: ScreenOrientation = ScreenOrientation.PORTRAIT, nightMode: NightMode = NOTNIGHT, density: Density = Density.XHIGH, ratio: ScreenRatio = ScreenRatio.NOTLONG, size: ScreenSize = ScreenSize.NORMAL, keyboard: Keyboard = Keyboard.NOKEY, touchScreen: TouchScreen = TouchScreen.FINGER, keyboardState: KeyboardState = KeyboardState.SOFT, softButtons: Boolean = true, navigation: Navigation = Navigation.NONAV, released: String = \"November 13, 2012\") Provides FolderConfiguration and HardwareConfig for various devices. Also provides utility methods to parse build.prop and attrs.xml to generate the appropriate maps. Defaults are for a Nexus 4 device.","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_10/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / NEXUS_10 NEXUS_10 \u00b6 val NEXUS_10: DeviceConfig","title":" n e x u s 10"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_10/#nexus_10","text":"val NEXUS_10: DeviceConfig","title":"NEXUS_10"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_4/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / NEXUS_4 NEXUS_4 \u00b6 val NEXUS_4: DeviceConfig","title":" n e x u s 4"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_4/#nexus_4","text":"val NEXUS_4: DeviceConfig","title":"NEXUS_4"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_5/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / NEXUS_5 NEXUS_5 \u00b6 val NEXUS_5: DeviceConfig","title":" n e x u s 5"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_5/#nexus_5","text":"val NEXUS_5: DeviceConfig","title":"NEXUS_5"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_5_-l-a-n-d/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / NEXUS_5_LAND NEXUS_5_LAND \u00b6 val NEXUS_5_LAND: DeviceConfig","title":" n e x u s 5  l a n d"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_5_-l-a-n-d/#nexus_5_land","text":"val NEXUS_5_LAND: DeviceConfig","title":"NEXUS_5_LAND"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_7/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / NEXUS_7 NEXUS_7 \u00b6 val NEXUS_7: DeviceConfig","title":" n e x u s 7"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_7/#nexus_7","text":"val NEXUS_7: DeviceConfig","title":"NEXUS_7"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_7_2012/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / NEXUS_7_2012 NEXUS_7_2012 \u00b6 val NEXUS_7_2012: DeviceConfig","title":" n e x u s 7 2012"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-n-e-x-u-s_7_2012/#nexus_7_2012","text":"val NEXUS_7_2012: DeviceConfig","title":"NEXUS_7_2012"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL PIXEL \u00b6 val PIXEL: DeviceConfig","title":" p i x e l"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l/#pixel","text":"val PIXEL: DeviceConfig","title":"PIXEL"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_-c/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_C PIXEL_C \u00b6 val PIXEL_C: DeviceConfig","title":" p i x e l  c"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_-c/#pixel_c","text":"val PIXEL_C: DeviceConfig","title":"PIXEL_C"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_-x-l/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_XL PIXEL_XL \u00b6 val PIXEL_XL: DeviceConfig","title":" p i x e l  x l"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_-x-l/#pixel_xl","text":"val PIXEL_XL: DeviceConfig","title":"PIXEL_XL"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_2/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_2 PIXEL_2 \u00b6 val PIXEL_2: DeviceConfig","title":" p i x e l 2"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_2/#pixel_2","text":"val PIXEL_2: DeviceConfig","title":"PIXEL_2"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_2_-x-l/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_2_XL PIXEL_2_XL \u00b6 val PIXEL_2_XL: DeviceConfig","title":" p i x e l 2  x l"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_2_-x-l/#pixel_2_xl","text":"val PIXEL_2_XL: DeviceConfig","title":"PIXEL_2_XL"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_3-a/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_3A PIXEL_3A \u00b6 val PIXEL_3A: DeviceConfig","title":" p i x e l 3 a"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_3-a/#pixel_3a","text":"val PIXEL_3A: DeviceConfig","title":"PIXEL_3A"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_3-a_-x-l/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_3A_XL PIXEL_3A_XL \u00b6 val PIXEL_3A_XL: DeviceConfig","title":" p i x e l 3 a  x l"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_3-a_-x-l/#pixel_3a_xl","text":"val PIXEL_3A_XL: DeviceConfig","title":"PIXEL_3A_XL"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_3/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_3 PIXEL_3 \u00b6 val PIXEL_3: DeviceConfig","title":" p i x e l 3"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_3/#pixel_3","text":"val PIXEL_3: DeviceConfig","title":"PIXEL_3"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_3_-x-l/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_3_XL PIXEL_3_XL \u00b6 val PIXEL_3_XL: DeviceConfig","title":" p i x e l 3  x l"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_3_-x-l/#pixel_3_xl","text":"val PIXEL_3_XL: DeviceConfig","title":"PIXEL_3_XL"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_4-a/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_4A PIXEL_4A \u00b6 val PIXEL_4A: DeviceConfig","title":" p i x e l 4 a"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_4-a/#pixel_4a","text":"val PIXEL_4A: DeviceConfig","title":"PIXEL_4A"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_4/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_4 PIXEL_4 \u00b6 val PIXEL_4: DeviceConfig","title":" p i x e l 4"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_4/#pixel_4","text":"val PIXEL_4: DeviceConfig","title":"PIXEL_4"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_4_-x-l/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / PIXEL_4_XL PIXEL_4_XL \u00b6 val PIXEL_4_XL: DeviceConfig","title":" p i x e l 4  x l"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/-p-i-x-e-l_4_-x-l/#pixel_4_xl","text":"val PIXEL_4_XL: DeviceConfig","title":"PIXEL_4_XL"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/density/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / density density \u00b6 val density: Density","title":"Density"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/density/#density","text":"val density: Density","title":"density"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/folder-configuration/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / folderConfiguration folderConfiguration \u00b6 val folderConfiguration: FolderConfiguration","title":"Folder configuration"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/folder-configuration/#folderconfiguration","text":"val folderConfiguration: FolderConfiguration","title":"folderConfiguration"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/get-enum-map/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / getEnumMap getEnumMap \u00b6 fun getEnumMap(path: File ): Map < String , Map < String , Int >>","title":"Get enum map"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/get-enum-map/#getenummap","text":"fun getEnumMap(path: File ): Map < String , Map < String , Int >>","title":"getEnumMap"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/hardware-config/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / hardwareConfig hardwareConfig \u00b6 val hardwareConfig: HardwareConfig","title":"Hardware config"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/hardware-config/#hardwareconfig","text":"val hardwareConfig: HardwareConfig","title":"hardwareConfig"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/keyboard-state/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / keyboardState keyboardState \u00b6 val keyboardState: KeyboardState","title":"Keyboard state"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/keyboard-state/#keyboardstate","text":"val keyboardState: KeyboardState","title":"keyboardState"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/keyboard/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / keyboard keyboard \u00b6 val keyboard: Keyboard","title":"Keyboard"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/keyboard/#keyboard","text":"val keyboard: Keyboard","title":"keyboard"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/load-properties/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / loadProperties loadProperties \u00b6 fun loadProperties(path: File ): Map < String , String >","title":"Load properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/load-properties/#loadproperties","text":"fun loadProperties(path: File ): Map < String , String >","title":"loadProperties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/navigation/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / navigation navigation \u00b6 val navigation: Navigation","title":"Navigation"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/navigation/#navigation","text":"val navigation: Navigation","title":"navigation"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/night-mode/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / nightMode nightMode \u00b6 val nightMode: NightMode","title":"Night mode"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/night-mode/#nightmode","text":"val nightMode: NightMode","title":"nightMode"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/orientation/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / orientation orientation \u00b6 val orientation: ScreenOrientation","title":"Orientation"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/orientation/#orientation","text":"val orientation: ScreenOrientation","title":"orientation"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/ratio/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / ratio ratio \u00b6 val ratio: ScreenRatio","title":"Ratio"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/ratio/#ratio","text":"val ratio: ScreenRatio","title":"ratio"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/released/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / released released \u00b6 val released: String","title":"Released"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/released/#released","text":"val released: String","title":"released"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/screen-height/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / screenHeight screenHeight \u00b6 val screenHeight: Int","title":"Screen height"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/screen-height/#screenheight","text":"val screenHeight: Int","title":"screenHeight"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/screen-width/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / screenWidth screenWidth \u00b6 val screenWidth: Int","title":"Screen width"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/screen-width/#screenwidth","text":"val screenWidth: Int","title":"screenWidth"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/size/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / size size \u00b6 val size: ScreenSize","title":"Size"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/size/#size","text":"val size: ScreenSize","title":"size"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/soft-buttons/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / softButtons softButtons \u00b6 val softButtons: Boolean","title":"Soft buttons"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/soft-buttons/#softbuttons","text":"val softButtons: Boolean","title":"softButtons"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/touch-screen/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / touchScreen touchScreen \u00b6 val touchScreen: TouchScreen","title":"Touch screen"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/touch-screen/#touchscreen","text":"val touchScreen: TouchScreen","title":"touchScreen"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/xdpi/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / xdpi xdpi \u00b6 val xdpi: Int","title":"Xdpi"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/xdpi/#xdpi","text":"val xdpi: Int","title":"xdpi"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/ydpi/","text":"paparazzi / app.cash.paparazzi / DeviceConfig / ydpi ydpi \u00b6 val ydpi: Int","title":"Ydpi"},{"location":"0.x/paparazzi/app.cash.paparazzi/-device-config/ydpi/#ydpi","text":"val ydpi: Int","title":"ydpi"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/","text":"paparazzi / app.cash.paparazzi / Environment Environment \u00b6 data class Environment Constructors \u00b6 Name Summary <init> Environment(platformDir: String , appTestDir: String , resDir: String , assetsDir: String , packageName: String , compileSdkVersion: Int ) Properties \u00b6 Name Summary appTestDir val appTestDir: String assetsDir val assetsDir: String compileSdkVersion val compileSdkVersion: Int packageName val packageName: String platformDir val platformDir: String resDir val resDir: String","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/#environment","text":"data class Environment","title":"Environment"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/#constructors","text":"Name Summary <init> Environment(platformDir: String , appTestDir: String , resDir: String , assetsDir: String , packageName: String , compileSdkVersion: Int )","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/#properties","text":"Name Summary appTestDir val appTestDir: String assetsDir val assetsDir: String compileSdkVersion val compileSdkVersion: Int packageName val packageName: String platformDir val platformDir: String resDir val resDir: String","title":"Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/-init-/","text":"paparazzi / app.cash.paparazzi / Environment / <init> <init> \u00b6 Environment(platformDir: String , appTestDir: String , resDir: String , assetsDir: String , packageName: String , compileSdkVersion: Int )","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/-init-/#init","text":"Environment(platformDir: String , appTestDir: String , resDir: String , assetsDir: String , packageName: String , compileSdkVersion: Int )","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/app-test-dir/","text":"paparazzi / app.cash.paparazzi / Environment / appTestDir appTestDir \u00b6 val appTestDir: String","title":"App test dir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/app-test-dir/#apptestdir","text":"val appTestDir: String","title":"appTestDir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/assets-dir/","text":"paparazzi / app.cash.paparazzi / Environment / assetsDir assetsDir \u00b6 val assetsDir: String","title":"Assets dir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/assets-dir/#assetsdir","text":"val assetsDir: String","title":"assetsDir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/compile-sdk-version/","text":"paparazzi / app.cash.paparazzi / Environment / compileSdkVersion compileSdkVersion \u00b6 val compileSdkVersion: Int","title":"Compile sdk version"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/compile-sdk-version/#compilesdkversion","text":"val compileSdkVersion: Int","title":"compileSdkVersion"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/package-name/","text":"paparazzi / app.cash.paparazzi / Environment / packageName packageName \u00b6 val packageName: String","title":"Package name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/package-name/#packagename","text":"val packageName: String","title":"packageName"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/platform-data-dir/","text":"paparazzi / app.cash.paparazzi / Environment / platformDataDir platformDataDir \u00b6 val platformDataDir: String","title":"Platform data dir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/platform-data-dir/#platformdatadir","text":"val platformDataDir: String","title":"platformDataDir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/platform-dir/","text":"paparazzi / app.cash.paparazzi / Environment / platformDir platformDir \u00b6 val platformDir: String","title":"Platform dir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/platform-dir/#platformdir","text":"val platformDir: String","title":"platformDir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/res-dir/","text":"paparazzi / app.cash.paparazzi / Environment / resDir resDir \u00b6 val resDir: String","title":"Res dir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/res-dir/#resdir","text":"val resDir: String","title":"resDir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-flags/","text":"paparazzi / app.cash.paparazzi / Flags Flags \u00b6 object Flags Properties \u00b6 Name Summary DEBUG_LINKED_OBJECTS const val DEBUG_LINKED_OBJECTS: String","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-flags/#flags","text":"object Flags","title":"Flags"},{"location":"0.x/paparazzi/app.cash.paparazzi/-flags/#properties","text":"Name Summary DEBUG_LINKED_OBJECTS const val DEBUG_LINKED_OBJECTS: String","title":"Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-flags/-d-e-b-u-g_-l-i-n-k-e-d_-o-b-j-e-c-t-s/","text":"paparazzi / app.cash.paparazzi / Flags / DEBUG_LINKED_OBJECTS DEBUG_LINKED_OBJECTS \u00b6 const val DEBUG_LINKED_OBJECTS: String","title":" d e b u g  l i n k e d  o b j e c t s"},{"location":"0.x/paparazzi/app.cash.paparazzi/-flags/-d-e-b-u-g_-l-i-n-k-e-d_-o-b-j-e-c-t-s/#debug_linked_objects","text":"const val DEBUG_LINKED_OBJECTS: String","title":"DEBUG_LINKED_OBJECTS"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/","text":"paparazzi / app.cash.paparazzi / Paparazzi Paparazzi \u00b6 class Paparazzi : TestRule Constructors \u00b6 Name Summary <init> Paparazzi(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference)) Properties \u00b6 Name Summary contentRoot val contentRoot: String context val context: Context layoutInflater val layoutInflater: LayoutInflater resources val resources: Resources Functions \u00b6 Name Summary addRenderExtension fun addRenderExtension(renderExtension: RenderExtension ): Unit apply fun apply(base: Statement, description: Description): Statement close fun close(): Unit gif fun gif(view: View, name: String ? = null, deviceConfig: DeviceConfig ? = null, theme: String ? = null, start: Long = 0L, end: Long = 500L, fps: Int = 30): Unit inflate fun <V : View> inflate(layoutId: Int ): V prepare fun prepare(description: Description): Unit removeRenderExtension fun removeRenderExtension(renderExtension: RenderExtension ): Unit snapshot fun snapshot(view: View, name: String ? = null, deviceConfig: DeviceConfig ? = null, theme: String ? = null): Unit","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/#paparazzi","text":"class Paparazzi : TestRule","title":"Paparazzi"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/#constructors","text":"Name Summary <init> Paparazzi(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference))","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/#properties","text":"Name Summary contentRoot val contentRoot: String context val context: Context layoutInflater val layoutInflater: LayoutInflater resources val resources: Resources","title":"Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/#functions","text":"Name Summary addRenderExtension fun addRenderExtension(renderExtension: RenderExtension ): Unit apply fun apply(base: Statement, description: Description): Statement close fun close(): Unit gif fun gif(view: View, name: String ? = null, deviceConfig: DeviceConfig ? = null, theme: String ? = null, start: Long = 0L, end: Long = 500L, fps: Int = 30): Unit inflate fun <V : View> inflate(layoutId: Int ): V prepare fun prepare(description: Description): Unit removeRenderExtension fun removeRenderExtension(renderExtension: RenderExtension ): Unit snapshot fun snapshot(view: View, name: String ? = null, deviceConfig: DeviceConfig ? = null, theme: String ? = null): Unit","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/-init-/","text":"paparazzi / app.cash.paparazzi / Paparazzi / <init> <init> \u00b6 Paparazzi(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference))","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/-init-/#init","text":"Paparazzi(environment: Environment = detectEnvironment(), deviceConfig: DeviceConfig = DeviceConfig.NEXUS_5, theme: String = \"android:Theme.Material.NoActionBar.Fullscreen\", appCompatEnabled: Boolean = true, maxPercentDifference: Double = 0.1, snapshotHandler: SnapshotHandler = determineHandler(maxPercentDifference))","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/add-render-extension/","text":"paparazzi / app.cash.paparazzi / Paparazzi / addRenderExtension addRenderExtension \u00b6 fun addRenderExtension(renderExtension: RenderExtension ): Unit","title":"Add render extension"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/add-render-extension/#addrenderextension","text":"fun addRenderExtension(renderExtension: RenderExtension ): Unit","title":"addRenderExtension"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/apply/","text":"paparazzi / app.cash.paparazzi / Paparazzi / apply apply \u00b6 fun apply(base: Statement, description: Description): Statement","title":"Apply"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/apply/#apply","text":"fun apply(base: Statement, description: Description): Statement","title":"apply"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/close/","text":"paparazzi / app.cash.paparazzi / Paparazzi / close close \u00b6 fun close(): Unit","title":"Close"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/close/#close","text":"fun close(): Unit","title":"close"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/content-root/","text":"paparazzi / app.cash.paparazzi / Paparazzi / contentRoot contentRoot \u00b6 val contentRoot: String","title":"Content root"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/content-root/#contentroot","text":"val contentRoot: String","title":"contentRoot"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/context/","text":"paparazzi / app.cash.paparazzi / Paparazzi / context context \u00b6 val context: Context","title":"Context"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/context/#context","text":"val context: Context","title":"context"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/gif/","text":"paparazzi / app.cash.paparazzi / Paparazzi / gif gif \u00b6 fun gif(view: View, name: String ? = null, deviceConfig: DeviceConfig ? = null, theme: String ? = null, start: Long = 0L, end: Long = 500L, fps: Int = 30): Unit","title":"Gif"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/gif/#gif","text":"fun gif(view: View, name: String ? = null, deviceConfig: DeviceConfig ? = null, theme: String ? = null, start: Long = 0L, end: Long = 500L, fps: Int = 30): Unit","title":"gif"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/inflate/","text":"paparazzi / app.cash.paparazzi / Paparazzi / inflate inflate \u00b6 fun <V : View> inflate(@LayoutRes layoutId: Int ): V","title":"Inflate"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/inflate/#inflate","text":"fun <V : View> inflate(@LayoutRes layoutId: Int ): V","title":"inflate"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/layout-inflater/","text":"paparazzi / app.cash.paparazzi / Paparazzi / layoutInflater layoutInflater \u00b6 val layoutInflater: LayoutInflater","title":"Layout inflater"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/layout-inflater/#layoutinflater","text":"val layoutInflater: LayoutInflater","title":"layoutInflater"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/prepare/","text":"paparazzi / app.cash.paparazzi / Paparazzi / prepare prepare \u00b6 fun prepare(description: Description): Unit","title":"Prepare"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/prepare/#prepare","text":"fun prepare(description: Description): Unit","title":"prepare"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/remove-render-extension/","text":"paparazzi / app.cash.paparazzi / Paparazzi / removeRenderExtension removeRenderExtension \u00b6 fun removeRenderExtension(renderExtension: RenderExtension ): Unit","title":"Remove render extension"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/remove-render-extension/#removerenderextension","text":"fun removeRenderExtension(renderExtension: RenderExtension ): Unit","title":"removeRenderExtension"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/resources/","text":"paparazzi / app.cash.paparazzi / Paparazzi / resources resources \u00b6 val resources: Resources","title":"Resources"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/resources/#resources","text":"val resources: Resources","title":"resources"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/snapshot/","text":"paparazzi / app.cash.paparazzi / Paparazzi / snapshot snapshot \u00b6 fun snapshot(view: View, name: String ? = null, deviceConfig: DeviceConfig ? = null, theme: String ? = null): Unit","title":"Snapshot"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/snapshot/#snapshot","text":"fun snapshot(view: View, name: String ? = null, deviceConfig: DeviceConfig ? = null, theme: String ? = null): Unit","title":"snapshot"},{"location":"0.x/paparazzi/app.cash.paparazzi/-render-extension/","text":"paparazzi / app.cash.paparazzi / RenderExtension RenderExtension \u00b6 interface RenderExtension An extension for overlaying additional information on top of each rendered frame. Functions \u00b6 Name Summary render abstract fun render(snapshot: Snapshot , view: View, image: BufferedImage ): BufferedImage","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-render-extension/#renderextension","text":"interface RenderExtension An extension for overlaying additional information on top of each rendered frame.","title":"RenderExtension"},{"location":"0.x/paparazzi/app.cash.paparazzi/-render-extension/#functions","text":"Name Summary render abstract fun render(snapshot: Snapshot , view: View, image: BufferedImage ): BufferedImage","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-render-extension/render/","text":"paparazzi / app.cash.paparazzi / RenderExtension / render render \u00b6 abstract fun render(snapshot: Snapshot , view: View, image: BufferedImage ): BufferedImage","title":"Render"},{"location":"0.x/paparazzi/app.cash.paparazzi/-render-extension/render/#render","text":"abstract fun render(snapshot: Snapshot , view: View, image: BufferedImage ): BufferedImage","title":"render"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/","text":"paparazzi / app.cash.paparazzi / Snapshot Snapshot \u00b6 @JsonClass(true) data class Snapshot Constructors \u00b6 Name Summary <init> Snapshot(name: String ?, testName: TestName , timestamp: Date , tags: List < String > = listOf(), file: String ? = null) Properties \u00b6 Name Summary file val file: String ? name val name: String ? tags val tags: List < String > testName val testName: TestName timestamp val timestamp: Date","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/#snapshot","text":"@JsonClass(true) data class Snapshot","title":"Snapshot"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/#constructors","text":"Name Summary <init> Snapshot(name: String ?, testName: TestName , timestamp: Date , tags: List < String > = listOf(), file: String ? = null)","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/#properties","text":"Name Summary file val file: String ? name val name: String ? tags val tags: List < String > testName val testName: TestName timestamp val timestamp: Date","title":"Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/-init-/","text":"paparazzi / app.cash.paparazzi / Snapshot / <init> <init> \u00b6 Snapshot(name: String ?, testName: TestName , timestamp: Date , tags: List < String > = listOf(), file: String ? = null)","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/-init-/#init","text":"Snapshot(name: String ?, testName: TestName , timestamp: Date , tags: List < String > = listOf(), file: String ? = null)","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/file/","text":"paparazzi / app.cash.paparazzi / Snapshot / file file \u00b6 val file: String ?","title":"File"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/file/#file","text":"val file: String ?","title":"file"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/name/","text":"paparazzi / app.cash.paparazzi / Snapshot / name name \u00b6 val name: String ?","title":"Name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/name/#name","text":"val name: String ?","title":"name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/tags/","text":"paparazzi / app.cash.paparazzi / Snapshot / tags tags \u00b6 val tags: List < String >","title":"Tags"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/tags/#tags","text":"val tags: List < String >","title":"tags"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/test-name/","text":"paparazzi / app.cash.paparazzi / Snapshot / testName testName \u00b6 val testName: TestName","title":"Test name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/test-name/#testname","text":"val testName: TestName","title":"testName"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/timestamp/","text":"paparazzi / app.cash.paparazzi / Snapshot / timestamp timestamp \u00b6 val timestamp: Date","title":"Timestamp"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/timestamp/#timestamp","text":"val timestamp: Date","title":"timestamp"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/","text":"paparazzi / app.cash.paparazzi / SnapshotHandler SnapshotHandler \u00b6 interface SnapshotHandler : Closeable Types \u00b6 Name Summary FrameHandler interface FrameHandler : Closeable Functions \u00b6 Name Summary newFrameHandler abstract fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler Inheritors \u00b6 Name Summary SnapshotVerifier class SnapshotVerifier : SnapshotHandler","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#snapshothandler","text":"interface SnapshotHandler : Closeable","title":"SnapshotHandler"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#types","text":"Name Summary FrameHandler interface FrameHandler : Closeable","title":"Types"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#functions","text":"Name Summary newFrameHandler abstract fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#inheritors","text":"Name Summary SnapshotVerifier class SnapshotVerifier : SnapshotHandler","title":"Inheritors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/new-frame-handler/","text":"paparazzi / app.cash.paparazzi / SnapshotHandler / newFrameHandler newFrameHandler \u00b6 abstract fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"New frame handler"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/new-frame-handler/#newframehandler","text":"abstract fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"newFrameHandler"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/","text":"paparazzi / app.cash.paparazzi / SnapshotHandler / FrameHandler FrameHandler \u00b6 interface FrameHandler : Closeable Functions \u00b6 Name Summary handle abstract fun handle(image: BufferedImage ): Unit","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/#framehandler","text":"interface FrameHandler : Closeable","title":"FrameHandler"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/#functions","text":"Name Summary handle abstract fun handle(image: BufferedImage ): Unit","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/handle/","text":"paparazzi / app.cash.paparazzi / SnapshotHandler / FrameHandler / handle handle \u00b6 abstract fun handle(image: BufferedImage ): Unit","title":"Handle"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/handle/#handle","text":"abstract fun handle(image: BufferedImage ): Unit","title":"handle"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/","text":"paparazzi / app.cash.paparazzi / SnapshotJsonAdapter SnapshotJsonAdapter \u00b6 class SnapshotJsonAdapter : JsonAdapter< Snapshot > Constructors \u00b6 Name Summary <init> SnapshotJsonAdapter(moshi: Moshi) Functions \u00b6 Name Summary fromJson fun fromJson(reader: JsonReader): Snapshot toJson fun toJson(writer: JsonWriter, value: Snapshot ?): Unit toString fun toString(): String","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/#snapshotjsonadapter","text":"class SnapshotJsonAdapter : JsonAdapter< Snapshot >","title":"SnapshotJsonAdapter"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/#constructors","text":"Name Summary <init> SnapshotJsonAdapter(moshi: Moshi)","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/#functions","text":"Name Summary fromJson fun fromJson(reader: JsonReader): Snapshot toJson fun toJson(writer: JsonWriter, value: Snapshot ?): Unit toString fun toString(): String","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/-init-/","text":"paparazzi / app.cash.paparazzi / SnapshotJsonAdapter / <init> <init> \u00b6 SnapshotJsonAdapter(moshi: Moshi)","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/-init-/#init","text":"SnapshotJsonAdapter(moshi: Moshi)","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/from-json/","text":"paparazzi / app.cash.paparazzi / SnapshotJsonAdapter / fromJson fromJson \u00b6 fun fromJson(reader: JsonReader): Snapshot","title":"From json"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/from-json/#fromjson","text":"fun fromJson(reader: JsonReader): Snapshot","title":"fromJson"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/to-json/","text":"paparazzi / app.cash.paparazzi / SnapshotJsonAdapter / toJson toJson \u00b6 fun toJson(writer: JsonWriter, value: Snapshot ?): Unit","title":"To json"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/to-json/#tojson","text":"fun toJson(writer: JsonWriter, value: Snapshot ?): Unit","title":"toJson"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/to-string/","text":"paparazzi / app.cash.paparazzi / SnapshotJsonAdapter / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-json-adapter/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/","text":"paparazzi / app.cash.paparazzi / SnapshotVerifier SnapshotVerifier \u00b6 class SnapshotVerifier : SnapshotHandler Constructors \u00b6 Name Summary <init> SnapshotVerifier(maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\")) Functions \u00b6 Name Summary close fun close(): Unit newFrameHandler fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/#snapshotverifier","text":"class SnapshotVerifier : SnapshotHandler","title":"SnapshotVerifier"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/#constructors","text":"Name Summary <init> SnapshotVerifier(maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\"))","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/#functions","text":"Name Summary close fun close(): Unit newFrameHandler fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/-init-/","text":"paparazzi / app.cash.paparazzi / SnapshotVerifier / <init> <init> \u00b6 SnapshotVerifier(maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\"))","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/-init-/#init","text":"SnapshotVerifier(maxPercentDifference: Double , rootDirectory: File = File(\"src/test/snapshots\"))","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/close/","text":"paparazzi / app.cash.paparazzi / SnapshotVerifier / close close \u00b6 fun close(): Unit","title":"Close"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/close/#close","text":"fun close(): Unit","title":"close"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/new-frame-handler/","text":"paparazzi / app.cash.paparazzi / SnapshotVerifier / newFrameHandler newFrameHandler \u00b6 fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler Overrides SnapshotHandler.newFrameHandler","title":"New frame handler"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-verifier/new-frame-handler/#newframehandler","text":"fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler Overrides SnapshotHandler.newFrameHandler","title":"newFrameHandler"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/","text":"paparazzi / app.cash.paparazzi / TestName TestName \u00b6 data class TestName Constructors \u00b6 Name Summary <init> TestName(packageName: String , className: String , methodName: String ) Properties \u00b6 Name Summary className val className: String methodName val methodName: String packageName val packageName: String","title":"Index"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/#testname","text":"data class TestName","title":"TestName"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/#constructors","text":"Name Summary <init> TestName(packageName: String , className: String , methodName: String )","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/#properties","text":"Name Summary className val className: String methodName val methodName: String packageName val packageName: String","title":"Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/-init-/","text":"paparazzi / app.cash.paparazzi / TestName / <init> <init> \u00b6 TestName(packageName: String , className: String , methodName: String )","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/-init-/#init","text":"TestName(packageName: String , className: String , methodName: String )","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/class-name/","text":"paparazzi / app.cash.paparazzi / TestName / className className \u00b6 val className: String","title":"Class name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/class-name/#classname","text":"val className: String","title":"className"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/method-name/","text":"paparazzi / app.cash.paparazzi / TestName / methodName methodName \u00b6 val methodName: String","title":"Method name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/method-name/#methodname","text":"val methodName: String","title":"methodName"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/package-name/","text":"paparazzi / app.cash.paparazzi / TestName / packageName packageName \u00b6 val packageName: String","title":"Package name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/package-name/#packagename","text":"val packageName: String","title":"packageName"}]}