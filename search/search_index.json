{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Paparazzi An Android library to render your application screens without a physical device or emulator. Releases Our change log has release history. implementation ( app.cash.paparazzi:paparazzi:0.1.0 ) Snapshot builds are available . License Copyright 2019 Square, Inc. Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Overview"},{"location":"#paparazzi","text":"An Android library to render your application screens without a physical device or emulator.","title":"Paparazzi"},{"location":"#releases","text":"Our change log has release history. implementation ( app.cash.paparazzi:paparazzi:0.1.0 ) Snapshot builds are available .","title":"Releases"},{"location":"#license","text":"Copyright 2019 Square, Inc. Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"changelog/","text":"Change Log Version 0.1.0 2019-06-28 Initial release.","title":"Change Log"},{"location":"changelog/#change-log","text":"","title":"Change Log"},{"location":"changelog/#version-010","text":"2019-06-28 Initial release.","title":"Version 0.1.0"},{"location":"code_of_conduct/","text":"Open Source Code of Conduct At Square, we are committed to contributing to the open source community and simplifying the process of releasing and managing open source software. We\u2019ve seen incredible support and enthusiasm from thousands of people who have already contributed to our projects\u200a\u2014\u200aand we want to ensure our community continues to be truly open for everyone. This code of conduct outlines our expectations for participants, as well as steps to reporting unacceptable behavior. We are committed to providing a welcoming and inspiring community for all and expect our code of conduct to be honored. Square\u2019s open source community strives to: Be open : We invite anyone to participate in any aspect of our projects. Our community is open, and any responsibility can be carried by a contributor who demonstrates the required capacity and competence. Be considerate : People use our work, and we depend on the work of others. Consider users and colleagues before taking action. For example, changes to code, infrastructure, policy, and documentation may negatively impact others. Be respectful : We expect people to work together to resolve conflict, assume good intentions, and act with empathy. Do not turn disagreements into personal attacks. Be collaborative : Collaboration reduces redundancy and improves the quality of our work. We strive for transparency within our open source community, and we work closely with upstream developers and others in the free software community to coordinate our efforts. Be pragmatic : Questions are encouraged and should be asked early in the process to avoid problems later. Be thoughtful and considerate when seeking out the appropriate forum for your questions. Those who are asked should be responsive and helpful. Step down considerately : Members of every project come and go. When somebody leaves or disengages from the project, they should make it known and take the proper steps to ensure that others can pick up where they left off. This code is not exhaustive or complete. It serves to distill our common understanding of a collaborative, shared environment, and goals. We expect it to be followed in spirit as much as in the letter. Diversity Statement We encourage everyone to participate and are committed to building a community for all. Although we may not be able to satisfy everyone, we all agree that everyone is equal. Whenever a participant has made a mistake, we expect them to take responsibility for it. If someone has been harmed or offended, it is our responsibility to listen carefully and respectfully, and do our best to right the wrong. Although this list cannot be exhaustive, we explicitly honor diversity in age, culture, ethnicity, gender identity or expression, language, national origin, political beliefs, profession, race, religion, sexual orientation, socioeconomic status, and technical ability. We will not tolerate discrimination based on any of the protected characteristics above, including participants with disabilities. Reporting Issues If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . For more details, please see our Reporting Guidelines below. Thanks Some of the ideas and wording for the statements and guidelines above were based on work by the Twitter , Ubuntu , GDC , and Django communities. We are thankful for their work. Reporting Guide If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . All reports will be handled with discretion. In your report please include: Your contact information. Names (real, nicknames, or pseudonyms) of any individuals involved. If there are additional witnesses, please include them as well. Your account of what occurred, and if you believe the incident is ongoing. If there is a publicly available record (e.g. a mailing list archive or a public IRC logger), please include a link. Any additional information that may be helpful. After filing a report, a representative from the Square Code of Conduct committee will contact you personally. The committee will then review the incident, follow up with any additional questions, and make a decision as to how to respond. Anyone asked to stop unacceptable behavior is expected to comply immediately. If an individual engages in unacceptable behavior, the Square Code of Conduct committee may take any action they deem appropriate, up to and including a permanent ban from all of Square spaces without warning.","title":"Code of Conduct"},{"location":"code_of_conduct/#open-source-code-of-conduct","text":"At Square, we are committed to contributing to the open source community and simplifying the process of releasing and managing open source software. We\u2019ve seen incredible support and enthusiasm from thousands of people who have already contributed to our projects\u200a\u2014\u200aand we want to ensure our community continues to be truly open for everyone. This code of conduct outlines our expectations for participants, as well as steps to reporting unacceptable behavior. We are committed to providing a welcoming and inspiring community for all and expect our code of conduct to be honored. Square\u2019s open source community strives to: Be open : We invite anyone to participate in any aspect of our projects. Our community is open, and any responsibility can be carried by a contributor who demonstrates the required capacity and competence. Be considerate : People use our work, and we depend on the work of others. Consider users and colleagues before taking action. For example, changes to code, infrastructure, policy, and documentation may negatively impact others. Be respectful : We expect people to work together to resolve conflict, assume good intentions, and act with empathy. Do not turn disagreements into personal attacks. Be collaborative : Collaboration reduces redundancy and improves the quality of our work. We strive for transparency within our open source community, and we work closely with upstream developers and others in the free software community to coordinate our efforts. Be pragmatic : Questions are encouraged and should be asked early in the process to avoid problems later. Be thoughtful and considerate when seeking out the appropriate forum for your questions. Those who are asked should be responsive and helpful. Step down considerately : Members of every project come and go. When somebody leaves or disengages from the project, they should make it known and take the proper steps to ensure that others can pick up where they left off. This code is not exhaustive or complete. It serves to distill our common understanding of a collaborative, shared environment, and goals. We expect it to be followed in spirit as much as in the letter.","title":"Open Source Code of Conduct"},{"location":"code_of_conduct/#diversity-statement","text":"We encourage everyone to participate and are committed to building a community for all. Although we may not be able to satisfy everyone, we all agree that everyone is equal. Whenever a participant has made a mistake, we expect them to take responsibility for it. If someone has been harmed or offended, it is our responsibility to listen carefully and respectfully, and do our best to right the wrong. Although this list cannot be exhaustive, we explicitly honor diversity in age, culture, ethnicity, gender identity or expression, language, national origin, political beliefs, profession, race, religion, sexual orientation, socioeconomic status, and technical ability. We will not tolerate discrimination based on any of the protected characteristics above, including participants with disabilities.","title":"Diversity Statement"},{"location":"code_of_conduct/#reporting-issues","text":"If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . For more details, please see our Reporting Guidelines below.","title":"Reporting Issues"},{"location":"code_of_conduct/#thanks","text":"Some of the ideas and wording for the statements and guidelines above were based on work by the Twitter , Ubuntu , GDC , and Django communities. We are thankful for their work.","title":"Thanks"},{"location":"code_of_conduct/#reporting-guide","text":"If you experience or witness unacceptable behavior\u200a\u2014\u200aor have any other concerns\u200a\u2014\u200aplease report it by emailing codeofconduct@squareup.com . All reports will be handled with discretion. In your report please include: Your contact information. Names (real, nicknames, or pseudonyms) of any individuals involved. If there are additional witnesses, please include them as well. Your account of what occurred, and if you believe the incident is ongoing. If there is a publicly available record (e.g. a mailing list archive or a public IRC logger), please include a link. Any additional information that may be helpful. After filing a report, a representative from the Square Code of Conduct committee will contact you personally. The committee will then review the incident, follow up with any additional questions, and make a decision as to how to respond. Anyone asked to stop unacceptable behavior is expected to comply immediately. If an individual engages in unacceptable behavior, the Square Code of Conduct committee may take any action they deem appropriate, up to and including a permanent ban from all of Square spaces without warning.","title":"Reporting Guide"},{"location":"releasing/","text":"Releasing Update CHANGELOG.md . Set versions: export RELEASE_VERSION=X.Y.Z export NEXT_VERSION=X.Y.Z-SNAPSHOT Update, build, and upload: sed -i \\ s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g \\ gradle.properties sed -i \\ s/\\ app.cash.paparazzi:\\([^\\:]*\\):[^\\ ]*\\ /\\ app.cash.paparazzi:\\1:$RELEASE_VERSION\\ /g \\ `find . -name README.md ` ./gradlew clean uploadArchives Visit Sonatype Nexus to promote the artifact. Or drop it if there is a problem! Tag the release, prepare for the next one, and push to GitHub. git commit -am Prepare for release $RELEASE_VERSION. git tag -a parent-$RELEASE_VERSION -m Version $RELEASE_VERSION sed -i \\ s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g \\ gradle.properties git commit -am Prepare next development version. git push git push --tags Prerequisites In ~/.gradle/gradle.properties , set the following: SONATYPE_NEXUS_USERNAME - Sonatype username for releasing to com.squareup . SONATYPE_NEXUS_PASSWORD - Sonatype password for releasing to com.squareup .","title":"Releasing"},{"location":"releasing/#releasing","text":"Update CHANGELOG.md . Set versions: export RELEASE_VERSION=X.Y.Z export NEXT_VERSION=X.Y.Z-SNAPSHOT Update, build, and upload: sed -i \\ s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g \\ gradle.properties sed -i \\ s/\\ app.cash.paparazzi:\\([^\\:]*\\):[^\\ ]*\\ /\\ app.cash.paparazzi:\\1:$RELEASE_VERSION\\ /g \\ `find . -name README.md ` ./gradlew clean uploadArchives Visit Sonatype Nexus to promote the artifact. Or drop it if there is a problem! Tag the release, prepare for the next one, and push to GitHub. git commit -am Prepare for release $RELEASE_VERSION. git tag -a parent-$RELEASE_VERSION -m Version $RELEASE_VERSION sed -i \\ s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g \\ gradle.properties git commit -am Prepare next development version. git push git push --tags","title":"Releasing"},{"location":"releasing/#prerequisites","text":"In ~/.gradle/gradle.properties , set the following: SONATYPE_NEXUS_USERNAME - Sonatype username for releasing to com.squareup . SONATYPE_NEXUS_PASSWORD - Sonatype password for releasing to com.squareup .","title":"Prerequisites"},{"location":"0.x/paparazzi/","text":"paparazzi Packages Name Summary app.cash.paparazzi Index All Types","title":"Home"},{"location":"0.x/paparazzi/#packages","text":"Name Summary app.cash.paparazzi","title":"Packages"},{"location":"0.x/paparazzi/#index","text":"All Types","title":"Index"},{"location":"0.x/paparazzi/alltypes/","text":"All Types Name Summary app.cash.paparazzi.Environment app.cash.paparazzi.Paparazzi app.cash.paparazzi.PaparazziLogger This logger delegates to java.util.Logging. app.cash.paparazzi.Snapshot app.cash.paparazzi.SnapshotHandler app.cash.paparazzi.TestName","title":"Home"},{"location":"0.x/paparazzi/alltypes/#all-types","text":"Name Summary app.cash.paparazzi.Environment app.cash.paparazzi.Paparazzi app.cash.paparazzi.PaparazziLogger This logger delegates to java.util.Logging. app.cash.paparazzi.Snapshot app.cash.paparazzi.SnapshotHandler app.cash.paparazzi.TestName","title":"All Types"},{"location":"0.x/paparazzi/app.cash.paparazzi/","text":"paparazzi / app.cash.paparazzi Package app.cash.paparazzi Types Name Summary Environment data class Environment Paparazzi class Paparazzi : TestRule PaparazziLogger class PaparazziLogger : LayoutLog, ILogger This logger delegates to java.util.Logging. Snapshot data class Snapshot SnapshotHandler interface SnapshotHandler : Closeable TestName data class TestName Functions Name Summary detectEnvironment fun detectEnvironment(): Environment","title":"0.x API"},{"location":"0.x/paparazzi/app.cash.paparazzi/#package-appcashpaparazzi","text":"","title":"Package app.cash.paparazzi"},{"location":"0.x/paparazzi/app.cash.paparazzi/#types","text":"Name Summary Environment data class Environment Paparazzi class Paparazzi : TestRule PaparazziLogger class PaparazziLogger : LayoutLog, ILogger This logger delegates to java.util.Logging. Snapshot data class Snapshot SnapshotHandler interface SnapshotHandler : Closeable TestName data class TestName","title":"Types"},{"location":"0.x/paparazzi/app.cash.paparazzi/#functions","text":"Name Summary detectEnvironment fun detectEnvironment(): Environment","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/detect-environment/","text":"paparazzi / app.cash.paparazzi / detectEnvironment detectEnvironment fun detectEnvironment(): Environment","title":"Detect environment"},{"location":"0.x/paparazzi/app.cash.paparazzi/detect-environment/#detectenvironment","text":"fun detectEnvironment(): Environment","title":"detectEnvironment"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/","text":"paparazzi / app.cash.paparazzi / Environment Environment data class Environment Constructors Name Summary init Environment(platformDir: String , appTestDir: String ) Properties Name Summary appTestDir val appTestDir: String assetsDir val assetsDir: String platformDir val platformDir: String resDir val resDir: String testResDir val testResDir: String","title":"Home"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/#environment","text":"data class Environment","title":"Environment"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/#constructors","text":"Name Summary init Environment(platformDir: String , appTestDir: String )","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/#properties","text":"Name Summary appTestDir val appTestDir: String assetsDir val assetsDir: String platformDir val platformDir: String resDir val resDir: String testResDir val testResDir: String","title":"Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/-init-/","text":"paparazzi / app.cash.paparazzi / Environment / init init Environment(platformDir: String , appTestDir: String )","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/-init-/#init","text":"Environment(platformDir: String , appTestDir: String )","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/app-test-dir/","text":"paparazzi / app.cash.paparazzi / Environment / appTestDir appTestDir val appTestDir: String","title":"App test dir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/app-test-dir/#apptestdir","text":"val appTestDir: String","title":"appTestDir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/assets-dir/","text":"paparazzi / app.cash.paparazzi / Environment / assetsDir assetsDir val assetsDir: String","title":"Assets dir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/assets-dir/#assetsdir","text":"val assetsDir: String","title":"assetsDir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/platform-dir/","text":"paparazzi / app.cash.paparazzi / Environment / platformDir platformDir val platformDir: String","title":"Platform dir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/platform-dir/#platformdir","text":"val platformDir: String","title":"platformDir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/res-dir/","text":"paparazzi / app.cash.paparazzi / Environment / resDir resDir val resDir: String","title":"Res dir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/res-dir/#resdir","text":"val resDir: String","title":"resDir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/test-res-dir/","text":"paparazzi / app.cash.paparazzi / Environment / testResDir testResDir val testResDir: String","title":"Test res dir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-environment/test-res-dir/#testresdir","text":"val testResDir: String","title":"testResDir"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/","text":"paparazzi / app.cash.paparazzi / Paparazzi Paparazzi class Paparazzi : TestRule Constructors Name Summary init Paparazzi(packageName: String , environment: Environment = detectEnvironment(), snapshotHandler: SnapshotHandler = RunWriter()) Properties Name Summary layoutInflater val layoutInflater: LayoutInflater resources val resources: Resources Functions Name Summary apply fun apply(base: Statement, description: Description): Statement close fun close(): Unit gif fun gif(view: View, name: String ? = null, start: Long = 0, end: Long = 500, fps: Int = 30): Unit inflate fun V : View inflate(layoutId: Int ): V prepare fun prepare(description: Description): Unit snapshot fun snapshot(view: View, name: String ? = null): Unit","title":"Home"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/#paparazzi","text":"class Paparazzi : TestRule","title":"Paparazzi"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/#constructors","text":"Name Summary init Paparazzi(packageName: String , environment: Environment = detectEnvironment(), snapshotHandler: SnapshotHandler = RunWriter())","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/#properties","text":"Name Summary layoutInflater val layoutInflater: LayoutInflater resources val resources: Resources","title":"Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/#functions","text":"Name Summary apply fun apply(base: Statement, description: Description): Statement close fun close(): Unit gif fun gif(view: View, name: String ? = null, start: Long = 0, end: Long = 500, fps: Int = 30): Unit inflate fun V : View inflate(layoutId: Int ): V prepare fun prepare(description: Description): Unit snapshot fun snapshot(view: View, name: String ? = null): Unit","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/-init-/","text":"paparazzi / app.cash.paparazzi / Paparazzi / init init Paparazzi(packageName: String , environment: Environment = detectEnvironment(), snapshotHandler: SnapshotHandler = RunWriter())","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/-init-/#init","text":"Paparazzi(packageName: String , environment: Environment = detectEnvironment(), snapshotHandler: SnapshotHandler = RunWriter())","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/apply/","text":"paparazzi / app.cash.paparazzi / Paparazzi / apply apply fun apply(base: Statement, description: Description): Statement","title":"Apply"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/apply/#apply","text":"fun apply(base: Statement, description: Description): Statement","title":"apply"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/close/","text":"paparazzi / app.cash.paparazzi / Paparazzi / close close fun close(): Unit","title":"Close"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/close/#close","text":"fun close(): Unit","title":"close"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/gif/","text":"paparazzi / app.cash.paparazzi / Paparazzi / gif gif fun gif(view: View, name: String ? = null, start: Long = 0, end: Long = 500, fps: Int = 30): Unit","title":"Gif"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/gif/#gif","text":"fun gif(view: View, name: String ? = null, start: Long = 0, end: Long = 500, fps: Int = 30): Unit","title":"gif"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/inflate/","text":"paparazzi / app.cash.paparazzi / Paparazzi / inflate inflate fun V : View inflate(@LayoutRes layoutId: Int ): V","title":"Inflate"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/inflate/#inflate","text":"fun V : View inflate(@LayoutRes layoutId: Int ): V","title":"inflate"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/layout-inflater/","text":"paparazzi / app.cash.paparazzi / Paparazzi / layoutInflater layoutInflater val layoutInflater: LayoutInflater","title":"Layout inflater"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/layout-inflater/#layoutinflater","text":"val layoutInflater: LayoutInflater","title":"layoutInflater"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/prepare/","text":"paparazzi / app.cash.paparazzi / Paparazzi / prepare prepare fun prepare(description: Description): Unit","title":"Prepare"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/prepare/#prepare","text":"fun prepare(description: Description): Unit","title":"prepare"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/resources/","text":"paparazzi / app.cash.paparazzi / Paparazzi / resources resources val resources: Resources","title":"Resources"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/resources/#resources","text":"val resources: Resources","title":"resources"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/snapshot/","text":"paparazzi / app.cash.paparazzi / Paparazzi / snapshot snapshot fun snapshot(view: View, name: String ? = null): Unit","title":"Snapshot"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi/snapshot/#snapshot","text":"fun snapshot(view: View, name: String ? = null): Unit","title":"snapshot"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/","text":"paparazzi / app.cash.paparazzi / PaparazziLogger PaparazziLogger class PaparazziLogger : LayoutLog, ILogger This logger delegates to java.util.Logging. TODO: gather logged messages and fail successful tests that have unexpected errors. Constructors Name Summary init PaparazziLogger() This logger delegates to java.util.Logging. Functions Name Summary error fun error(throwable: Throwable ?, format: String ?, vararg args: Any ): Unit fun error(tag: String ?, message: String ?, viewCookie: Any ?, data: Any ?): Unit fun error(tag: String ?, message: String ?, throwable: Throwable ?, viewCookie: Any ?, data: Any ?): Unit fidelityWarning fun fidelityWarning(tag: String ?, message: String ?, throwable: Throwable ?, cookie: Any ?, data: Any ?): Unit info fun info(format: String , vararg args: Any ): Unit verbose fun verbose(format: String , vararg args: Any ): Unit warning fun warning(format: String , vararg args: Any ): Unit fun warning(tag: String ?, message: String ?, viewCookie: Any ?, data: Any ?): Unit","title":"Home"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/#paparazzilogger","text":"class PaparazziLogger : LayoutLog, ILogger This logger delegates to java.util.Logging. TODO: gather logged messages and fail successful tests that have unexpected errors.","title":"PaparazziLogger"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/#constructors","text":"Name Summary init PaparazziLogger() This logger delegates to java.util.Logging.","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/#functions","text":"Name Summary error fun error(throwable: Throwable ?, format: String ?, vararg args: Any ): Unit fun error(tag: String ?, message: String ?, viewCookie: Any ?, data: Any ?): Unit fun error(tag: String ?, message: String ?, throwable: Throwable ?, viewCookie: Any ?, data: Any ?): Unit fidelityWarning fun fidelityWarning(tag: String ?, message: String ?, throwable: Throwable ?, cookie: Any ?, data: Any ?): Unit info fun info(format: String , vararg args: Any ): Unit verbose fun verbose(format: String , vararg args: Any ): Unit warning fun warning(format: String , vararg args: Any ): Unit fun warning(tag: String ?, message: String ?, viewCookie: Any ?, data: Any ?): Unit","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/-init-/","text":"paparazzi / app.cash.paparazzi / PaparazziLogger / init init PaparazziLogger() This logger delegates to java.util.Logging. TODO: gather logged messages and fail successful tests that have unexpected errors.","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/-init-/#init","text":"PaparazziLogger() This logger delegates to java.util.Logging. TODO: gather logged messages and fail successful tests that have unexpected errors.","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/error/","text":"paparazzi / app.cash.paparazzi / PaparazziLogger / error error fun error(throwable: Throwable ?, format: String ?, vararg args: Any ): Unit fun error(tag: String ?, message: String ?, viewCookie: Any ?, data: Any ?): Unit fun error(tag: String ?, message: String ?, throwable: Throwable ?, viewCookie: Any ?, data: Any ?): Unit","title":"Error"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/error/#error","text":"fun error(throwable: Throwable ?, format: String ?, vararg args: Any ): Unit fun error(tag: String ?, message: String ?, viewCookie: Any ?, data: Any ?): Unit fun error(tag: String ?, message: String ?, throwable: Throwable ?, viewCookie: Any ?, data: Any ?): Unit","title":"error"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/fidelity-warning/","text":"paparazzi / app.cash.paparazzi / PaparazziLogger / fidelityWarning fidelityWarning fun fidelityWarning(tag: String ?, message: String ?, throwable: Throwable ?, cookie: Any ?, data: Any ?): Unit","title":"Fidelity warning"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/fidelity-warning/#fidelitywarning","text":"fun fidelityWarning(tag: String ?, message: String ?, throwable: Throwable ?, cookie: Any ?, data: Any ?): Unit","title":"fidelityWarning"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/info/","text":"paparazzi / app.cash.paparazzi / PaparazziLogger / info info fun info(format: String , vararg args: Any ): Unit","title":"Info"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/info/#info","text":"fun info(format: String , vararg args: Any ): Unit","title":"info"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/verbose/","text":"paparazzi / app.cash.paparazzi / PaparazziLogger / verbose verbose fun verbose(format: String , vararg args: Any ): Unit","title":"Verbose"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/verbose/#verbose","text":"fun verbose(format: String , vararg args: Any ): Unit","title":"verbose"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/warning/","text":"paparazzi / app.cash.paparazzi / PaparazziLogger / warning warning fun warning(format: String , vararg args: Any ): Unit fun warning(tag: String ?, message: String ?, viewCookie: Any ?, data: Any ?): Unit","title":"Warning"},{"location":"0.x/paparazzi/app.cash.paparazzi/-paparazzi-logger/warning/#warning","text":"fun warning(format: String , vararg args: Any ): Unit fun warning(tag: String ?, message: String ?, viewCookie: Any ?, data: Any ?): Unit","title":"warning"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/","text":"paparazzi / app.cash.paparazzi / Snapshot Snapshot data class Snapshot Constructors Name Summary init Snapshot(name: String , testName: TestName , timestamp: Date , tags: List String = listOf(), file: String ? = null) Properties Name Summary file val file: String ? name val name: String tags val tags: List String testName val testName: TestName timestamp val timestamp: Date","title":"Home"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/#snapshot","text":"data class Snapshot","title":"Snapshot"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/#constructors","text":"Name Summary init Snapshot(name: String , testName: TestName , timestamp: Date , tags: List String = listOf(), file: String ? = null)","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/#properties","text":"Name Summary file val file: String ? name val name: String tags val tags: List String testName val testName: TestName timestamp val timestamp: Date","title":"Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/-init-/","text":"paparazzi / app.cash.paparazzi / Snapshot / init init Snapshot(name: String , testName: TestName , timestamp: Date , tags: List String = listOf(), file: String ? = null)","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/-init-/#init","text":"Snapshot(name: String , testName: TestName , timestamp: Date , tags: List String = listOf(), file: String ? = null)","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/file/","text":"paparazzi / app.cash.paparazzi / Snapshot / file file val file: String ?","title":"File"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/file/#file","text":"val file: String ?","title":"file"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/name/","text":"paparazzi / app.cash.paparazzi / Snapshot / name name val name: String","title":"Name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/name/#name","text":"val name: String","title":"name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/tags/","text":"paparazzi / app.cash.paparazzi / Snapshot / tags tags val tags: List String","title":"Tags"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/tags/#tags","text":"val tags: List String","title":"tags"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/test-name/","text":"paparazzi / app.cash.paparazzi / Snapshot / testName testName val testName: TestName","title":"Test name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/test-name/#testname","text":"val testName: TestName","title":"testName"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/timestamp/","text":"paparazzi / app.cash.paparazzi / Snapshot / timestamp timestamp val timestamp: Date","title":"Timestamp"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot/timestamp/#timestamp","text":"val timestamp: Date","title":"timestamp"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/","text":"paparazzi / app.cash.paparazzi / SnapshotHandler SnapshotHandler interface SnapshotHandler : Closeable Types Name Summary FrameHandler interface FrameHandler : Closeable Functions Name Summary newFrameHandler abstract fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"Home"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#snapshothandler","text":"interface SnapshotHandler : Closeable","title":"SnapshotHandler"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#types","text":"Name Summary FrameHandler interface FrameHandler : Closeable","title":"Types"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/#functions","text":"Name Summary newFrameHandler abstract fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/new-frame-handler/","text":"paparazzi / app.cash.paparazzi / SnapshotHandler / newFrameHandler newFrameHandler abstract fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"New frame handler"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/new-frame-handler/#newframehandler","text":"abstract fun newFrameHandler(snapshot: Snapshot , frameCount: Int , fps: Int ): SnapshotHandler.FrameHandler","title":"newFrameHandler"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/","text":"paparazzi / app.cash.paparazzi / SnapshotHandler / FrameHandler FrameHandler interface FrameHandler : Closeable Functions Name Summary handle abstract fun handle(image: BufferedImage ): Unit","title":"Home"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/#framehandler","text":"interface FrameHandler : Closeable","title":"FrameHandler"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/#functions","text":"Name Summary handle abstract fun handle(image: BufferedImage ): Unit","title":"Functions"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/handle/","text":"paparazzi / app.cash.paparazzi / SnapshotHandler / FrameHandler / handle handle abstract fun handle(image: BufferedImage ): Unit","title":"Handle"},{"location":"0.x/paparazzi/app.cash.paparazzi/-snapshot-handler/-frame-handler/handle/#handle","text":"abstract fun handle(image: BufferedImage ): Unit","title":"handle"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/","text":"paparazzi / app.cash.paparazzi / TestName TestName data class TestName Constructors Name Summary init TestName(packageName: String , className: String , methodName: String ) Properties Name Summary className val className: String methodName val methodName: String packageName val packageName: String","title":"Home"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/#testname","text":"data class TestName","title":"TestName"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/#constructors","text":"Name Summary init TestName(packageName: String , className: String , methodName: String )","title":"Constructors"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/#properties","text":"Name Summary className val className: String methodName val methodName: String packageName val packageName: String","title":"Properties"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/-init-/","text":"paparazzi / app.cash.paparazzi / TestName / init init TestName(packageName: String , className: String , methodName: String )","title":" init "},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/-init-/#init","text":"TestName(packageName: String , className: String , methodName: String )","title":"&lt;init&gt;"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/class-name/","text":"paparazzi / app.cash.paparazzi / TestName / className className val className: String","title":"Class name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/class-name/#classname","text":"val className: String","title":"className"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/method-name/","text":"paparazzi / app.cash.paparazzi / TestName / methodName methodName val methodName: String","title":"Method name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/method-name/#methodname","text":"val methodName: String","title":"methodName"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/package-name/","text":"paparazzi / app.cash.paparazzi / TestName / packageName packageName val packageName: String","title":"Package name"},{"location":"0.x/paparazzi/app.cash.paparazzi/-test-name/package-name/#packagename","text":"val packageName: String","title":"packageName"}]}